name: CI/CD Monorepo

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:

  # ========================
  # Setup cache only
  # ========================
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3
      - id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

  # ========================
  # Lint all projects
  # ========================
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Verify pnpm
        run: |
          which pnpm
          pnpm --version
      - name: Install dependencies
        run: pnpm install
      - name: Run ESLint
        run: pnpm lint

  # ========================
  # Backend tests
  # ========================
  test-backend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Verify pnpm
        run: |
          which pnpm
          pnpm --version
      - name: Install dependencies
        run: pnpm install
      - name: Test API Gateway
        working-directory: ./backend/api-gateway
        run: pnpm exec jest --passWithNoTests
      - name: Test Worker Service
        working-directory: ./backend/worker-service
        run: pnpm exec jest --passWithNoTests

  # ========================
  # Frontend tests
  # ========================
  test-frontend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Enable pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm exec jest --passWithNoTests

  # ========================
  # Mobile tests
  # ========================
  test-mobile:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install
      - name: Run Tests
        working-directory: ./mobile
        run: pnpm exec jest --passWithNoTests

  # ========================
  # Full Deployment
  # ========================
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test-backend, test-frontend, test-mobile]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ${{ github.workspace }}/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ${{ github.workspace }}/.ssh/id_rsa
          chmod 600 ${{ github.workspace }}/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ${{ github.workspace }}/.ssh/known_hosts

      - name: Run deployment
        run: |
          ssh -i ${{ github.workspace }}/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "bash -s" < ./scripts/deploy.sh
