name: CI/CD Monorepo

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:

  # ========================
  # Setup dependencies
  # ========================
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Cache pnpm store
      - name: Cache pnpm store
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

  # ========================
  # Lint all projects
  # ========================
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run ESLint
        run: pnpm exec eslint . --ext .ts,.tsx

  # ========================
  # Backend tests
  # ========================
  test-backend:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        service: [api-gateway, worker-service, ai-service]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run backend tests
        working-directory: ./backend/${{ matrix.service }}
        run: pnpm exec jest --passWithNoTests

  # ========================
  # Frontend tests
  # ========================
  test-frontend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run frontend tests
        working-directory: ./frontend
        run: pnpm exec jest --passWithNoTests

  # ========================
  # Mobile tests
  # ========================
  test-mobile:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run mobile tests
        working-directory: ./mobile
        run: pnpm exec jest --passWithNoTests

  # ========================
  # Full Deployment
  # ========================
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test-backend, test-frontend, test-mobile]
    steps:
      - uses: actions/checkout@v3

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Make deploy script executable
      - name: Make deploy script executable
        run: chmod +x ./scripts/deploy.sh

      # Run the unified deploy script
      - name: Run deployment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ./scripts/deploy.sh
